"""
Classes included in modules
1. stop_words
    methods:
                get_sws
                get_removed_sws
2. cols_new
    methods:
                get_cols_new

Module used for all lists needing importing to notebook file.
"""


class stop_words:
    """
    list of stopwords used for sentiment modeling
    input: no input required
    output: manually updated list. Began with nltk 'english' stopword list and
            removed all words with negative connotation that may be important for sentiment analysis
    """

    def __init__(self):
        self.sws = [
            "i",
            "me",
            "my",
            "myself",
            "we",
            "our",
            "ours",
            "ourselves",
            "you",
            "you're",
            "you've",
            "you'll",
            "you'd",
            "your",
            "yours",
            "yourself",
            "yourselves",
            "he",
            "him",
            "his",
            "himself",
            "she",
            "she's",
            "her",
            "hers",
            "herself",
            "it",
            "it's",
            "its",
            "itself",
            'the',
            'was',
            "they",
            "them",
            "their",
            "theirs",
            "themselves",
            "what",
            "which",
            "who",
            "whom",
            "this",
            "that",
            "that'll",
            "these",
            "those",
            "am",
            "is",
            "are",
            "was",
            "were",
            "be",
            "been",
            "being",
            "have",
            "has",
            "had",
            "having",
            "do",
            "does",
            "did",
            "doing",
            "a",
            "an",
            "the",
            "and",
            "or",
            "because",
            "as",
            "until",
            "while",
            "of",
            "at",
            "by",
            "for",
            "with",
            "about",
            "to",
            "from",
            "up",
            "down",
            "in",
            "out",
            "on",
            "off",
            "over",
            "under",
            "again",
            "further",
            "then",
            "once",
            "here",
            "there",
            "when",
            "where",
            "why",
            "how",
            "all",
            "any",
            "both",
            "each",
            "most",
            "some",
            "such",
            "own",
            "same",
            "so",
            "than",
            "very",
            "s",
            "t",
            "can",
            "will",
            "just",
            "now",
            "d",
            "ll",
            "m",
            "o",
            "re",
            "ve",
            "y",
            "ma",
        ]
        self.removed_sws = [
            "no",
            "nor",
            "not",
            "only",
            "but",
            "if",
            "but",
            "if",
            "too",
            "few",
            "more",
            "other",
            "against",
            "between",
            "into",
            "through",
            "during",
            "before",
            "after",
            "above",
            "below",
            "ain",
            "aren",
            "aren't",
            "couldn",
            "couldn't",
            "didn",
            "didn't",
            "doesn",
            "doesn't",
            "hadn",
            "hadn't",
            "hasn",
            "hasn't",
            "haven",
            "haven't",
            "isn",
            "isn't",
            "don",
            "don't",
            "should",
            "should've",
            "mightn",
            "mightn't",
            "mustn",
            "mustn't",
            "needn",
            "needn't",
            "shan",
            "shan't",
            "shouldn",
            "shouldn't",
            "wasn",
            "wasn't",
            "weren",
            "weren't",
            "won",
            "won't",
            "wouldn",
            "wouldn't",
        ]

    def get_sws(self):
        return self.sws

    def get_removed_sws(self):
        return self.removed_sws


class cols_new:
    def __init__(self):
        self.cols_new = [
            "id",
            "listing_url",
            "scrape_id",
            "last_scraped",
            "summary",
            "space",
            "description",
            "experiences_offered",
            "neighborhood_overview",
            "notes",
            "transit",
            "thumbnail_url",
            "medium_url",
            "picture_url",
            "xl_picture_url",
            "host_url",
            "host_since",
            "host_location",
            "host_about",
            "host_response_time",
            "host_response_rate",
            "host_acceptance_rate",
            "host_is_superhost",
            "host_thumbnail_url",
            "host_picture_url",
            "host_neighbourhood",
            "host_listings_count",
            "host_total_listings_count",
            "host_verifications",
            "host_has_profile_pic",
            "host_identity_verified",
            "street",
            "neighbourhood_cleansed",
            "neighbourhood_group_cleansed",
            "city",
            "state",
            "zipcode",
            "market",
            "smart_location",
            "country_code",
            "country",
            "is_location_exact",
            "property_type",
            "accommodates",
            "bathrooms",
            "bedrooms",
            "beds",
            "bed_type",
            "amenities",
            "square_feet",
            "weekly_price",
            "monthly_price",
            "security_deposit",
            "cleaning_fee",
            "guests_included",
            "extra_people",
            "maximum_nights",
            "calendar_updated",
            "has_availability",
            "availability_30",
            "availability_60",
            "availability_90",
            "calendar_last_scraped",
            "first_review",
            "review_scores_rating",
            "review_scores_accuracy",
            "review_scores_cleanliness",
            "review_scores_checkin",
            "review_scores_communication",
            "review_scores_location",
            "review_scores_value",
            "requires_license",
            "license",
            "jurisdiction_names",
            "instant_bookable",
            "cancellation_policy",
            "require_guest_profile_picture",
            "require_guest_phone_verification",
        ]

    def get_cols_new(self):
        return self.cols_new


class noise:
    """
    retrieves list of noisy instances from training data
    """

    def __init__(self):
        self.noise = [
            5341,
            6540,
            8748,
            2507,
            4510,
            5309,
            5670,
            5820,
            10163,
            5917,
            8902,
            3263,
            25525,
            12937,
            25785,
            700,
            15703,
            29148,
            13801,
            12956,
            23269,
            32224,
            23524,
            7595,
            3388,
            3261,
            9986,
            10248,
            8932,
            4,
            8334,
            7656,
            9980,
            2748,
            10134,
            7652,
            5063,
            2940,
            540,
            3091,
            3734,
            9303,
            9796,
            9082,
            6038,
            527,
            8551,
            8449,
            446,
            6122,
            7483,
            1634,
            9695,
            8678,
            3903,
            2745,
        ]

    def get_noise(self):
        return self.noise
